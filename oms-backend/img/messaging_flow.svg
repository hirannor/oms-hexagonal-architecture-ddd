<svg viewBox="0 0 800 1300" xmlns="http://www.w3.org/2000/svg" style="background-color: white;">
    <!-- Define styles -->
    <defs>
        <style>
            .box {
            fill: #f0f8ff;
            stroke: #2c5282;
            stroke-width: 2;
            rx: 8;
            }
            .controller { fill: #e6fffa; stroke: #38a169; }
            .application { fill: #fff5f5; stroke: #e53e3e; }
            .domain { fill: #fefcbf; stroke: #d69e2e; }
            .outbox { fill: #faf5ff; stroke: #805ad5; }
            .database { fill: #e0f2fe; stroke: #0277bd; }
            .messaging { fill: #fff3e0; stroke: #f57c00; }
            .rabbitmq { fill: #f3e5f5; stroke: #8e24aa; }
            .publisher { fill: #e8f5e8; stroke: #2d7d2d; }

            .text {
            font-family: 'Arial', sans-serif;
            font-size: 12px;
            text-anchor: middle;
            dominant-baseline: central;
            fill: #2d3748;
            }

            .title {
            font-weight: bold;
            font-size: 14px;
            }

            .subtitle {
            font-size: 10px;
            fill: #4a5568;
            }

            .arrow {
            stroke: #4a5568;
            stroke-width: 2;
            fill: none;
            marker-end: url(#arrowhead);
            }

            .label {
            font-size: 10px;
            fill: #718096;
            font-style: italic;
            }
        </style>

        <!-- Arrow marker -->
        <marker id="arrowhead" markerWidth="10" markerHeight="7"
                refX="9" refY="3.5" orient="auto">
            <polygon points="0 0, 10 3.5, 0 7" fill="#4a5568"/>
        </marker>
    </defs>

    <!-- Title -->
    <text x="400" y="25" class="text title" style="font-size: 18px;">
        Messaging Flow (Outbox + RabbitMQ)
    </text>

    <!-- Controller Layer -->
    <rect x="300" y="60" width="200" height="50" class="box controller"/>
    <text x="400" y="80" class="text title">Controller (REST)</text>
    <text x="400" y="95" class="text subtitle">API Endpoints</text>

    <!-- Arrow 1 -->
    <line x1="400" y1="110" x2="400" y2="140" class="arrow"/>

    <!-- Application Layer 1 -->
    <rect x="300" y="150" width="200" height="50" class="box application"/>
    <text x="400" y="170" class="text title">Application Layer</text>
    <text x="400" y="185" class="text subtitle">(Use Cases / Services)</text>

    <!-- Arrow 2 -->
    <line x1="400" y1="200" x2="400" y2="230" class="arrow"/>

    <!-- Domain Layer -->
    <rect x="300" y="240" width="200" height="50" class="box domain"/>
    <text x="400" y="260" class="text title">Domain Objects</text>
    <text x="400" y="275" class="text subtitle">(Entities with Event List)</text>

    <!-- Arrow 3 with label -->
    <line x1="400" y1="290" x2="400" y2="320" class="arrow"/>
    <text x="280" y="305" class="text label">App Layer extracts domain events</text>

    <!-- Outbox Port -->
    <rect x="300" y="330" width="200" height="50" class="box outbox"/>
    <text x="400" y="350" class="text title">Outbox (Port)</text>
    <text x="400" y="365" class="text subtitle">OutboxJpaRepository</text>

    <!-- Arrow 4 -->
    <line x1="400" y1="380" x2="400" y2="410" class="arrow"/>

    <!-- Outbox Database -->
    <rect x="300" y="420" width="200" height="50" class="box database"/>
    <text x="400" y="440" class="text title">Outbox Table (DB)</text>
    <text x="400" y="455" class="text subtitle">Persistent Storage</text>

    <!-- Arrow 5 with label -->
    <line x1="400" y1="470" x2="400" y2="500" class="arrow"/>
    <text x="220" y="485" class="text label">@Scheduled consumes messages</text>

    <!-- OutboxMessagePublisher -->
    <rect x="300" y="510" width="200" height="50" class="box publisher"/>
    <text x="400" y="530" class="text title">OutboxMessagePublisher</text>
    <text x="400" y="545" class="text subtitle">Consumes from DB Table</text>

    <!-- Arrow 6 -->
    <line x1="400" y1="560" x2="400" y2="590" class="arrow"/>

    <!-- RabbitMessagePublisher -->
    <rect x="300" y="600" width="200" height="50" class="box messaging"/>
    <text x="400" y="620" class="text title">RabbitMessagePublisher</text>
    <text x="400" y="635" class="text subtitle">Uses RabbitTemplate</text>

    <!-- Arrow 7 -->
    <line x1="400" y1="650" x2="400" y2="680" class="arrow"/>

    <!-- RabbitMQ Exchange -->
    <rect x="300" y="690" width="200" height="50" class="box rabbitmq"/>
    <text x="400" y="710" class="text title">RabbitMQ Exchange</text>
    <text x="400" y="725" class="text subtitle">Queue + DLQ</text>

    <!-- Arrow 8 -->
    <line x1="400" y1="740" x2="400" y2="770" class="arrow"/>

    <!-- RabbitMessageListener -->
    <rect x="300" y="780" width="200" height="50" class="box messaging"/>
    <text x="400" y="800" class="text title">RabbitMessageListener</text>
    <text x="400" y="815" class="text subtitle">Receives Messages</text>

    <!-- Arrow 9 with label -->
    <line x1="400" y1="830" x2="400" y2="860" class="arrow"/>
    <text x="270" y="845" class="text label">publishes with ApplicationEventPublisher</text>

    <!-- ApplicationEventBus -->
    <rect x="300" y="870" width="200" height="50" class="box application"/>
    <text x="400" y="890" class="text title">ApplicationEventPublisher</text>
    <text x="400" y="905" class="text subtitle">Event Distribution</text>

    <!-- Arrow 10 -->
    <line x1="400" y1="920" x2="400" y2="950" class="arrow"/>

    <!-- Application Layer Listener -->
    <rect x="300" y="960" width="200" height="50" class="box application"/>
    <text x="400" y="980" class="text title">Application Layer Listener</text>
    <text x="400" y="995" class="text subtitle">Receives Concrete Type</text>

    <!-- Arrow 11 -->
    <line x1="400" y1="1010" x2="400" y2="1040" class="arrow"/>

    <!-- Use Cases -->
    <rect x="300" y="1050" width="200" height="50" class="box domain"/>
    <text x="400" y="1070" class="text title">Use Cases</text>
    <text x="400" y="1085" class="text subtitle">Business Logic</text>

    <!-- Side annotations -->
    <g transform="translate(50, 200)">
        <text x="0" y="0" class="text" style="font-size: 11px; font-weight: bold;">OUTBOUND FLOW</text>
        <line x1="0" y1="10" x2="0" y2="450" stroke="#718096" stroke-width="1" stroke-dasharray="3,3"/>
    </g>

    <g transform="translate(50, 740)">
        <text x="0" y="0" class="text" style="font-size: 11px; font-weight: bold;">INBOUND FLOW</text>
        <line x1="0" y1="10" x2="0" y2="350" stroke="#718096" stroke-width="1" stroke-dasharray="3,3"/>
    </g>

    <!-- Legend -->
    <g transform="translate(550, 150)">
        <text x="0" y="0" class="text title" style="font-size: 14px;">Legend</text>

        <rect x="0" y="20" width="20" height="15" class="box controller"/>
        <text x="30" y="27" class="text" style="font-size: 10px; text-anchor: start;">Controller</text>

        <rect x="0" y="45" width="20" height="15" class="box application"/>
        <text x="30" y="52" class="text" style="font-size: 10px; text-anchor: start;">Application</text>

        <rect x="0" y="70" width="20" height="15" class="box domain"/>
        <text x="30" y="77" class="text" style="font-size: 10px; text-anchor: start;">Domain</text>

        <rect x="0" y="95" width="20" height="15" class="box outbox"/>
        <text x="30" y="102" class="text" style="font-size: 10px; text-anchor: start;">Outbox Pattern</text>

        <rect x="0" y="120" width="20" height="15" class="box database"/>
        <text x="30" y="127" class="text" style="font-size: 10px; text-anchor: start;">Database</text>

        <rect x="0" y="145" width="20" height="15" class="box messaging"/>
        <text x="30" y="152" class="text" style="font-size: 10px; text-anchor: start;">Messaging</text>

        <rect x="0" y="170" width="20" height="15" class="box rabbitmq"/>
        <text x="30" y="177" class="text" style="font-size: 10px; text-anchor: start;">RabbitMQ</text>

        <rect x="0" y="195" width="20" height="15" class="box publisher"/>
        <text x="30" y="202" class="text" style="font-size: 10px; text-anchor: start;">Publisher</text>
    </g>

    <!-- Key Features Box -->
    <g transform="translate(550, 400)">
        <rect x="-10" y="-10" width="220" height="200" fill="#f7fafc" stroke="#cbd5e0" stroke-width="1" rx="5"/>
        <text x="0" y="10" class="text title" style="font-size: 12px; text-anchor: start;">Key Features:</text>

        <text x="0" y="30" class="text" style="font-size: 9px; text-anchor: start;">• Guaranteed message delivery</text>
        <text x="0" y="45" class="text" style="font-size: 9px; text-anchor: start;">• Transactional outbox pattern
        </text>
        <text x="0" y="60" class="text" style="font-size: 9px; text-anchor: start;">• Dead letter queue support</text>
        <text x="0" y="75" class="text" style="font-size: 9px; text-anchor: start;">• Event-driven architecture</text>
        <text x="0" y="90" class="text" style="font-size: 9px; text-anchor: start;">• Decoupled components</text>
        <text x="0" y="105" class="text" style="font-size: 9px; text-anchor: start;">• Scheduled message publishing
        </text>
        <text x="0" y="120" class="text" style="font-size: 9px; text-anchor: start;">• Clean architecture layers</text>
        <text x="0" y="135" class="text" style="font-size: 9px; text-anchor: start;">• Resilient message processing
        </text>
        <text x="0" y="150" class="text" style="font-size: 9px; text-anchor: start;">• Domain event publishing</text>
        <text x="0" y="165" class="text" style="font-size: 9px; text-anchor: start;">• Concrete type handling</text>
    </g>

</svg>